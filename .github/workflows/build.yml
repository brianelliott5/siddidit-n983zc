# GitHub Actions workflow for Hello World Web Application
# Version: 1.0.0
# Last Updated: 2024-01-22

name: Build and Validate

# Trigger workflow on push and pull requests to main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Environment variables
env:
  DOCKER_IMAGE: hello-world-web
  DOCKER_TAG: latest
  NODE_VERSION: '18.x'
  TRIVY_SEVERITY: 'HIGH,CRITICAL'
  VULNERABILITY_THRESHOLD: 0

# Define permissions required for the workflow
permissions:
  contents: read
  packages: write
  security-events: write

jobs:
  validate:
    name: Validate HTML and Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd src/web
          npm ci

      - name: Run HTML validation
        run: |
          cd src/web
          npm run validate:html
        continue-on-error: false

      - name: Run security validation
        run: |
          cd src/web
          npm run validate:security
        continue-on-error: false

      - name: Generate validation report
        if: always()
        run: |
          echo "Validation Report" > validation-report.txt
          echo "=================" >> validation-report.txt
          echo "Date: $(date)" >> validation-report.txt
          echo "HTML Validation: ${{ job.status }}" >> validation-report.txt
          
      - name: Upload validation report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: validation-report
          path: validation-report.txt
          retention-days: 30

  security_scan:
    name: Security Scanning
    needs: validate
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.16.1
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: ${{ env.TRIVY_SEVERITY }}
          exit-code: '1'
          ignore-unfixed: true

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'trivy'

  build:
    name: Build Docker Container
    needs: [validate, security_scan]
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          buildkitd-flags: --debug

      - name: Build container
        uses: docker/build-push-action@v5
        with:
          context: ./src/web
          file: ./src/web/Dockerfile
          push: false
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ github.event.repository.updated_at }}
            VERSION=1.0.0
            BUILDKIT_INLINE_CACHE=1

      - name: Verify container
        run: |
          docker run --rm ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} nginx -t
          
      - name: Run container tests
        run: |
          docker run -d -p 8080:80 --name test-container ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          sleep 5
          curl -sSf http://localhost:8080 > /dev/null
          docker stop test-container

      - name: Generate build report
        if: always()
        run: |
          echo "Build Report" > build-report.txt
          echo "============" >> build-report.txt
          echo "Date: $(date)" >> build-report.txt
          echo "Status: ${{ job.status }}" >> build-report.txt
          echo "Image: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}" >> build-report.txt
          
      - name: Upload build report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-report
          path: build-report.txt
          retention-days: 30

  notify:
    name: Notification
    needs: [build]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Check build status
        if: ${{ needs.build.result != 'success' }}
        run: |
          echo "Build failed or had warnings"
          exit 1

      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Build Failure in workflow run #' + context.runNumber,
              body: 'Build failed in workflow run. Please check the logs for details: ' + context.serverUrl + '/' + context.repo.owner + '/' + context.repo.repo + '/actions/runs/' + context.runId
            })