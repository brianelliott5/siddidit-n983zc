# Enterprise-grade security scanning workflow for Hello World web application
# Version: 1.0.0
name: Security Scan

# Trigger workflow on push/PR to main and daily at midnight UTC
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC

# Environment variables available to all jobs
env:
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.16.1
        with:
          scan-type: 'fs,config'
          scan-ref: 'src/web'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'trivy'

  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions@0.4.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: >
            --severity-threshold=high
            --all-projects
            --sarif-file-output=snyk-results.sarif

      - name: Upload Snyk scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'snyk-results.sarif'
          category: 'snyk'

  static-analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
          queries: security-extended,security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: 'codeql'

  security-headers:
    name: Security Headers Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate security headers configuration
        run: |
          if ! grep -q "Content-Security-Policy" src/web/config/security-headers.conf; then
            echo "Missing Content-Security-Policy header configuration"
            exit 1
          fi
          if ! grep -q "X-Frame-Options" src/web/config/security-headers.conf; then
            echo "Missing X-Frame-Options header configuration"
            exit 1
          fi
          if ! grep -q "Strict-Transport-Security" src/web/config/security-headers.conf; then
            echo "Missing HSTS header configuration"
            exit 1
          fi

  docker-scan:
    name: Docker Image Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t hello-world-web:${{ github.sha }} src/web/

      - name: Run Trivy vulnerability scanner on Docker image
        uses: aquasecurity/trivy-action@0.16.1
        with:
          image-ref: 'hello-world-web:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-docker-results.sarif'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true

      - name: Upload Docker scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-docker-results.sarif'
          category: 'trivy-docker'

  security-report:
    name: Generate Security Report
    needs: [container-scan, dependency-scan, static-analysis, security-headers, docker-scan]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Create security scan summary
        run: |
          echo "# Security Scan Summary" > security-report.md
          echo "## Scan Results" >> security-report.md
          echo "- Container Security: ${{ needs.container-scan.result }}" >> security-report.md
          echo "- Dependency Security: ${{ needs.dependency-scan.result }}" >> security-report.md
          echo "- Static Analysis: ${{ needs.static-analysis.result }}" >> security-report.md
          echo "- Security Headers: ${{ needs.security-headers.result }}" >> security-report.md
          echo "- Docker Image Security: ${{ needs.docker-scan.result }}" >> security-report.md

      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.md
          retention-days: 30